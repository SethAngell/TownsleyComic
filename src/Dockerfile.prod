###### BUILDING PHASE
# Install and Configure Application
FROM python:3.9.5-slim-buster AS Build

# Set working directory for all following in container commands
WORKDIR /usr/src/app

ARG S3_KEY
ARG S3_SECRET_KEY
ARG DJANGO_SECRET_KEY

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV DJANGO_DEBUG 0
ENV ALLOWED_HOSTS townsleycomic.com www.townsleycomic.com 50.116.41.128
ENV USE_S3 1
ENV S3_KEY: ${S3_KEY}
ENV S3_SECRET_KEY: ${S3_SECRET_KEY}
ENV DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
ENV FNM_INSTALL_VERSION 20

RUN apt-get update \
  && apt-get -y install gcc postgresql libpq-dev vim gunicorn3 curl \
  && apt-get clean

# Handle all necessary dependencies
RUN pip install --upgrade pip
COPY ./requirements.txt .
RUN pip install -r requirements.txt

# Install App
COPY . .

# Compile TailwindCSS Files
WORKDIR /usr/src/app/jstoolchain
RUN apt-get update && \
  apt-get install -y curl unzip gnupg2 tini && \
  # install fnm
  curl -fsSL https://fnm.vercel.app/install | bash -s -- --install-dir "/opt/fnm" --skip-shell && \
  ln -s /opt/fnm/fnm /usr/bin/ && chmod +x /usr/bin/fnm && \
  # smoke test for fnm
  fnm -V \
  /bin/bash -c "source /etc/bash.bashrc && fnm install ${FNM_INSTALL_VERSION}" && \
  /bin/bash -c "source /etc/bash.bashrc && fnm alias default ${FNM_INSTALL_VERSION}" && \
  /bin/bash -c 'eval "$(fnm env --use-on-cd)"' && \
  /bin/bash -c "source /etc/bash.bashrc && fnm use default" && \
  /bin/bash -c 'source /etc/bash.bashrc && /bin/ln -s "/opt/fnm/aliases/default/bin/node" /usr/bin/node' && \
  /bin/bash -c 'source /etc/bash.bashrc && /bin/ln -s "/opt/fnm/aliases/default/bin/npm" /usr/bin/npm' && \
  /bin/bash -c 'source /etc/bash.bashrc && /bin/ln -s "/opt/fnm/aliases/default/bin/npx" /usr/bin/npx'
RUN fnm use
RUN npm install
RUN npm run build
RUN rm -rf node_modules

###### DEPLOYMENT PHASE
# Generate Container For Registry
FROM python:3.9.5-slim-buster AS Deploy
LABEL org.opencontainers.image.description "A ready to use image containing The Townsley Comic showcase"

WORKDIR /usr/src/app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV DJANGO_DEBUG 0
ENV ALLOWED_HOSTS townsleycomic.com www.townsleycomic.com 50.116.41.128
ENV USE_S3 1
ENV DB_ENGINE django.db.backends.postgresql_psycopg2

RUN apt-get update \
  && apt-get -y install gcc postgresql libpq-dev vim gunicorn3 \
  && apt-get clean

# Handle all necessary dependencies
RUN pip install --upgrade pip
COPY --from=Build /usr/src/app/requirements.txt .
RUN pip install -r requirements.txt

COPY --from=Build /usr/src/app .

RUN chmod +x start.sh

ENTRYPOINT sh start.sh
